﻿// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrbanReferralNetwork.Data;

#nullable disable

namespace UrbanReferralNetwork.Migrations
{
    [DbContext(typeof(UrbanReferralContext))]
    partial class UrbanReferralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UrbanReferralNetwork.Models.Contractor", b =>
                {
                    b.Property<int>("ContractorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("ServiceRadius")
                        .HasColumnType("int");

                    b.Property<string>("ServiceTypes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("ContractorId");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Contractors", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.Referral", b =>
                {
                    b.Property<int>("ReferralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferralId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReferralId");

                    b.HasIndex("CustomerZipCode");

                    b.HasIndex("RequestDate");

                    b.ToTable("Referrals", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ReferralDetail", b =>
                {
                    b.Property<int>("ReferralDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferralDetailId"));

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ContactedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("EstimateAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("EstimateNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("ReferralId")
                        .HasColumnType("int");

                    b.Property<bool>("SelectedByCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WorkCompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReferralDetailId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("ReferralId");

                    b.ToTable("ReferralDetails", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ServiceArea", b =>
                {
                    b.Property<int>("ServiceAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceAreaId"));

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("ServiceAreaId");

                    b.HasIndex("ZipCodeId");

                    b.HasIndex("ContractorId", "ZipCodeId")
                        .IsUnique();

                    b.ToTable("ServiceAreas", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceTypeId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceTypeId");

                    b.HasIndex("ServiceName")
                        .IsUnique();

                    b.ToTable("ServiceTypes", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ZipCode", b =>
                {
                    b.Property<int>("ZipCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZipCodeId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCodeValue")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ZipCode");

                    b.HasKey("ZipCodeId");

                    b.HasIndex("ZipCodeValue")
                        .IsUnique();

                    b.HasIndex("Latitude", "Longitude");

                    b.ToTable("ZipCodes", (string)null);
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.Contractor", b =>
                {
                    b.HasOne("UrbanReferralNetwork.Models.ZipCode", "ZipCode")
                        .WithMany("Contractors")
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ZipCode");
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ReferralDetail", b =>
                {
                    b.HasOne("UrbanReferralNetwork.Models.Contractor", "Contractor")
                        .WithMany("ReferralDetails")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UrbanReferralNetwork.Models.Referral", "Referral")
                        .WithMany("ReferralDetails")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ServiceArea", b =>
                {
                    b.HasOne("UrbanReferralNetwork.Models.Contractor", "Contractor")
                        .WithMany("ServiceAreas")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanReferralNetwork.Models.ZipCode", "ZipCode")
                        .WithMany("ServiceAreas")
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("ZipCode");
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.Contractor", b =>
                {
                    b.Navigation("ReferralDetails");

                    b.Navigation("ServiceAreas");
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.Referral", b =>
                {
                    b.Navigation("ReferralDetails");
                });

            modelBuilder.Entity("UrbanReferralNetwork.Models.ZipCode", b =>
                {
                    b.Navigation("Contractors");

                    b.Navigation("ServiceAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
